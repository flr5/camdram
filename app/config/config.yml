imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: "@ActsCamdramInfobaseBundle/Resources/config/services.yml" }

framework:
    esi: { enabled: true }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] }
    default_locale:  "%locale%"
    trusted_proxies: ['127.0.0.1']
    session:
        name: camdram
    fragments: { path: /_fragment }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'HoyesImageManagerBundle:Form:fields.html.twig'
        - 'ActsCamdramBundle:Form:fields.html.twig'
    globals:
        development_warning: %development_warning%

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ActsCamdramBundle, ActsCamdramInfobaseBundle ]
    filters:
        cssrewrite:
            apply_to: '\.css$'
        scssphp:
            import_paths: ['%kernel.root_dir%/../vendor/zurb/foundation/scss']
            apply_to: '\.scss$'

monolog:
    channels: ["camdram"]

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_pass%"
                path:     "%kernel.root_dir%/data/orm.db"
                charset:  UTF8
                schema_filter: ~^(?!phpcr_)~
                mapping_types:
                    enum:       string

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true
        entity_listener_resolver: acts_camdram_backend.doctrine.entity_listener_resolver
        mappings:
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable
                is_bundle: false

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool  : { type: memory }
    sender_address: %mailer_sender_address%

sensio_framework_extra:
    view:    { annotations: false }

fos_rest:
    view:
        formats:
            rss: true
            xml: true
            json: true
            jsonp: true
            ics: true
        mime_types:
            ics: text/calendar
            txt: text/plain
        templating_formats:
            html: true
            txt: true
        force_redirects:
            html: true
        view_response_listener: force
        failed_validation: HTTP_BAD_REQUEST
        jsonp_handler: ~
    service:
        view_handler: acts.camdram_api.view_handler
    routing_loader:
        default_format: html
    body_listener:
        decoders:
            json: fos_rest.decoder.jsontoform
    format_listener: true
    access_denied_listener:
        json: true
        xml: true
    disable_csrf_role: ROLE_API

jms_serializer:
    visitors:
        json:
            options: JSON_PRETTY_PRINT

acts_camdram:
    search_provider: %search_provider%
    techies_advert_default_days: 15
    techies_advert_max_days: 40
    data_dir: "%kernel.root_dir%/data"

acts_camdram_legacy:
    v1_hostname: %v1_hostname%

acts_social_api:
      http_client:
          timeout: 30,
          user_agent: 'Camdram.net - websupport@camdram.net'
      apis:
          facebook:
              client_id: %facebook_id%
              client_secret: %facebook_secret%
          twitter:
              client_id: %twitter_key%
              client_secret: %twitter_secret%
              access_token: %twitter_token%
              access_token_secret: %twitter_token_secret%
          google:
              client_id: %google_client_id%
              client_secret: %google_client_secret%
          google_simple:
              key: %google_key%
          github:
              client_id: %github_id%
              client_secret: %github_secret%

fos_oauth_server:
    db_driver:           orm
    client_class:        Acts\CamdramApiBundle\Entity\ExternalApp
    access_token_class:  Acts\CamdramApiBundle\Entity\AccessToken
    refresh_token_class: Acts\CamdramApiBundle\Entity\RefreshToken
    auth_code_class:     Acts\CamdramApiBundle\Entity\AuthCode
    service:
        storage: acts.camdram_api.oauth2_storage.default
        options:
            supported_scopes: api_email api_write api_write_org

acts_sphinx_real_time:
    clients:
        default:
          log: /var/log/sphinxsearch/searchd.log
          query_log: /var/log/sphinxsearch/query.log
          pid_file: /var/log/sphinxsearch/searchd.pid
    indexes:
        show:
            fields: [name, short_name, description]
            attributes: {name: string, description: string, entity_type: string, slug: string, index_date: datetime, rank: int}
            persistence:
                driver: orm
                model: Acts\CamdramBundle\Entity\Show
                listener:
                    is_indexable_callback: isIndexable
                provider: ~
                finder: ~
            config:
                min_prefix_len: 1
                prefix_fields: [name]
                enable_star: true
                dict: keywords
        venue:
            fields: [name, short_name, description]
            attributes: {name: string, short_name: string, description: string, slug: string,  entity_type: string, rank: int, index_date: datetime}
            persistence:
                driver: orm
                model: Acts\CamdramBundle\Entity\Venue
                provider: ~
                finder: ~
                listener: ~
            config:
                min_prefix_len: 1
                prefix_fields: [name, short_name]
                enable_star: true
                dict: keywords
        society:
            fields: [name, short_name, description]
            attributes: {name: string, short_name: string, description: string, slug: string, entity_type: string, rank: int, index_date: datetime}
            persistence:
                driver: orm
                model: Acts\CamdramBundle\Entity\Society
                provider: ~
                finder: ~
                listener: ~
            config:
                min_prefix_len: 1
                prefix_fields: [name, short_name]
                enable_star: true
                dict: keywords
        person:
            fields: [name, short_name, description]
            attributes: {name: string, description: string, entity_type: string, slug: string, rank: int, index_date: datetime, num_shows: int}
            persistence:
                driver: orm
                model: Acts\CamdramBundle\Entity\Person
                provider: ~
                finder: ~
                listener:
                    is_indexable_callback: isIndexable
            config:
                min_prefix_len: 1
                prefix_fields: [name]
                enable_star: true
                dict: keywords
        article:
            fields: [name, short_name, description]
            attributes: {name: string, description: string, entity_type: string, slug: string, rank: int, index_date: datetime}
            persistence:
                driver: orm
                model: Acts\CamdramInfobaseBundle\Entity\Article
                provider: ~
                finder: ~
            config:
                min_prefix_len: 1
                prefix_fields: [name]
                enable_star: true
                dict: keywords
        user:
            fields: [name]
            attributes: {name: string, email:string, registered_at: datetime, last_login_at: datetime}
            persistence:
                driver: orm
                model: Acts\CamdramSecurityBundle\Entity\User
                listener: ~
                provider: ~
                finder: ~
            config:
                min_prefix_len: 1
                enable_star: true
                dict: keywords

stof_doctrine_extensions:
    orm:
        default:
            sluggable: true
            loggable: true
            timestampable: true
    class:
        timestampable: Acts\CamdramBackendBundle\Listener\OverridableTimestampableListener

fos_js_routing:
    routes_to_expose: [ "get_[a-z]+", 'acts_camdram_diary.*', 'autocomplete_entity' ]

ewz_recaptcha:
    public_key: %recaptcha_site_key%
    private_key: %recaptcha_secret_key%
    locale_key: %kernel.default_locale%

parameters:
    security.authentication.trust_resolver.class: Acts\ExternalLoginBundle\Security\Authentication\AuthenticationTrustResolver
    test.client.class: Acts\CamdramBackendBundle\Test\Client
    router.request_context.host: www.camdram.net
